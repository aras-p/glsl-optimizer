varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec4 unity_Scale;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
uniform vec4 _BumpMap_ST;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _BumpMap_ST.xy) + _BumpMap_ST.zw);
  vec3 tmpvar_3;
  tmpvar_3 = (cross (gl_Normal, TANGENT.xyz) * TANGENT.w);
  mat3 tmpvar_4;
  tmpvar_4[0].x = TANGENT.x;
  tmpvar_4[0].y = tmpvar_3.x;
  tmpvar_4[0].z = gl_Normal.x;
  tmpvar_4[1].x = TANGENT.y;
  tmpvar_4[1].y = tmpvar_3.y;
  tmpvar_4[1].z = gl_Normal.y;
  tmpvar_4[2].x = TANGENT.z;
  tmpvar_4[2].y = tmpvar_3.z;
  tmpvar_4[2].z = gl_Normal.z;
  vec4 tmpvar_5;
  tmpvar_5.w = 1.00000;
  tmpvar_5.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_2;
  vec4 tmpvar_6;
  tmpvar_6.yzw = vec3(0.00000, 0.00000, 0.00000);
  tmpvar_6.x = tmpvar_2.z;
  xlv_FOG = tmpvar_6;
  gl_TexCoord[0] = tmpvar_1;
  vec4 tmpvar_7;
  tmpvar_7.w = 0.00000;
  tmpvar_7.xyz = (tmpvar_4 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - gl_Vertex.xyz));
  gl_TexCoord[1] = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8.w = 0.00000;
  tmpvar_8.xyz = (tmpvar_4 * (((_World2Object * tmpvar_5).xyz * unity_Scale.w) - gl_Vertex.xyz));
  gl_TexCoord[2] = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.w = 0.00000;
  tmpvar_9.xyz = (_LightMatrix0 * (_Object2World * gl_Vertex)).xyz;
  gl_TexCoord[3] = tmpvar_9;
}

