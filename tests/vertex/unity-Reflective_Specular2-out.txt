varying vec4 xlv_FOG;
uniform vec4 unity_Scale;
uniform vec3 _WorldSpaceCameraPos;
uniform mat4 _World2Object;
uniform vec4 _ProjectionParams;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  vec4 tmpvar_2;
  tmpvar_2.w = 1.00000;
  tmpvar_2.xyz = _WorldSpaceCameraPos;
  mat3 tmpvar_3;
  tmpvar_3[0] = _Object2World[0].xyz;
  tmpvar_3[1] = _Object2World[1].xyz;
  tmpvar_3[2] = _Object2World[2].xyz;
  vec4 o_4;
  vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_1 * 0.500000);
  o_4 = tmpvar_5;
  vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_1.zw;
  gl_Position = tmpvar_1;
  vec4 tmpvar_7;
  tmpvar_7.yzw = vec3(0.00000, 0.00000, 0.00000);
  tmpvar_7.x = tmpvar_1.z;
  xlv_FOG = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8.zw = vec2(0.00000, 0.00000);
  tmpvar_8.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  gl_TexCoord[0] = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9.w = 0.00000;
  tmpvar_9.xyz = (tmpvar_3 * reflect ((gl_Vertex.xyz - ((_World2Object * tmpvar_2).xyz * unity_Scale.w)), gl_Normal));
  gl_TexCoord[1] = tmpvar_9;
  gl_TexCoord[2] = o_4;
}

