struct v2f {
  vec4 pos;
  float fog;
  vec4 uv;
  vec4 color;
};
struct appdata_tree {
  vec4 vertex;
  vec4 tangent;
  vec3 normal;
  vec4 color;
  vec4 texcoord;
};
varying vec4 xlv_FOG;
attribute vec4 TANGENT;
uniform vec3 _TerrainTreeLightDirections[4];
uniform vec4 _TerrainTreeLightColors[4];
uniform mat4 _TerrainEngineBendTree;
uniform vec4 _SquashPlaneNormal;
uniform float _SquashAmount;
uniform vec4 _Scale;
uniform vec4 _Color;
uniform float _AO;
vec4 Squash (
  in vec4 pos_1
)
{
  vec3 planeNormal_2;
  vec3 planePoint_3;
  vec3 projectedVertex_4;
  vec3 tmpvar_5;
  tmpvar_5 = pos_1.xyz;
  projectedVertex_4 = tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6.xz = vec2(0.00000, 0.00000);
  tmpvar_6.y = _SquashPlaneNormal.w;
  vec3 tmpvar_7;
  tmpvar_7 = tmpvar_6;
  planePoint_3 = tmpvar_7;
  vec3 tmpvar_8;
  tmpvar_8 = _SquashPlaneNormal.xyz;
  planeNormal_2 = tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = pos_1.xyz;
  float tmpvar_10;
  tmpvar_10 = dot (planeNormal_2, (planePoint_3 - tmpvar_9));
  vec3 tmpvar_11;
  tmpvar_11 = (projectedVertex_4 + (tmpvar_10 * planeNormal_2));
  projectedVertex_4 = tmpvar_11;
  vec3 tmpvar_12;
  tmpvar_12 = vec3(_SquashAmount);
  vec3 tmpvar_13;
  tmpvar_13 = mix (projectedVertex_4, pos_1.xyz, tmpvar_12);
  vec4 tmpvar_14;
  tmpvar_14.w = 1.00000;
  tmpvar_14.xyz = tmpvar_13.xyz;
  vec4 tmpvar_15;
  tmpvar_15 = tmpvar_14;
  pos_1 = tmpvar_15;
  return pos_1;
}

void TerrainAnimateTree (
  inout vec4 pos_16,
  in float alpha_17
)
{
  vec3 bent_18;
  vec3 tmpvar_19;
  tmpvar_19 = (pos_16.xyz * _Scale.xyz);
  pos_16.xyz = tmpvar_19.xyz.xyz;
  vec4 tmpvar_20;
  tmpvar_20.w = 0.00000;
  tmpvar_20.xyz = pos_16.xyz.xyz;
  vec3 tmpvar_21;
  tmpvar_21 = (_TerrainEngineBendTree * tmpvar_20).xyz;
  bent_18 = tmpvar_21;
  vec3 tmpvar_22;
  tmpvar_22 = vec3(alpha_17);
  vec3 tmpvar_23;
  tmpvar_23 = mix (pos_16.xyz, bent_18, tmpvar_22);
  vec3 tmpvar_24;
  tmpvar_24 = tmpvar_23;
  pos_16.xyz = tmpvar_24.xyz.xyz;
  vec4 tmpvar_25;
  tmpvar_25 = Squash (pos_16);
  vec4 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  pos_16 = tmpvar_26;
}

v2f vert (
  in appdata_tree v_27
)
{
  float occ_28;
  float atten_29;
  int i_30;
  vec4 lightColor_31;
  vec4 lightDir_32;
  v2f o_33;
  vec3 viewpos_34;
  int tmpvar_35;
  tmpvar_35 = 0;
  i_30 = tmpvar_35;
  float tmpvar_36;
  tmpvar_36 = 1.00000;
  atten_29 = tmpvar_36;
  TerrainAnimateTree (v_27.vertex, v_27.color.w);
  vec3 tmpvar_37;
  tmpvar_37 = (gl_ModelViewMatrix * v_27.vertex).xyz;
  vec3 tmpvar_38;
  tmpvar_38 = tmpvar_37;
  viewpos_34 = tmpvar_38;
  vec4 tmpvar_39;
  tmpvar_39 = (gl_ModelViewProjectionMatrix * v_27.vertex);
  o_33.pos = tmpvar_39;
  float tmpvar_40;
  tmpvar_40 = o_33.pos.z;
  o_33.fog = tmpvar_40;
  vec4 tmpvar_41;
  tmpvar_41 = v_27.texcoord;
  o_33.uv = tmpvar_41;
  float tmpvar_42;
  tmpvar_42 = _AO;
  lightDir_32.w = vec4(tmpvar_42).w;
  vec4 tmpvar_43;
  tmpvar_43 = gl_LightModel.ambient;
  lightColor_31 = tmpvar_43;
  while (true) {
    if (!((i_30 < 4))) {
      break;
    };
    vec3 tmpvar_44;
    tmpvar_44 = _TerrainTreeLightDirections[i_30];
    lightDir_32.xyz = tmpvar_44.xyz.xyz;
    float tmpvar_45;
    tmpvar_45 = dot (lightDir_32.xyz, v_27.normal);
    float tmpvar_46;
    tmpvar_46 = tmpvar_45;
    occ_28 = tmpvar_46;
    float tmpvar_47;
    tmpvar_47 = max (0.00000, occ_28);
    float tmpvar_48;
    tmpvar_48 = tmpvar_47;
    occ_28 = tmpvar_48;
    float tmpvar_49;
    tmpvar_49 = (occ_28 * atten_29);
    occ_28 = tmpvar_49;
    vec4 tmpvar_50;
    tmpvar_50 = (lightColor_31 + (_TerrainTreeLightColors[i_30] * occ_28));
    lightColor_31 = tmpvar_50;
    int _post_incdec_tmp_51;
    _post_incdec_tmp_51 = i_30;
    int tmpvar_52;
    tmpvar_52 = (i_30 + 1);
    i_30 = tmpvar_52;
  };
  float tmpvar_53;
  tmpvar_53 = 1.00000;
  lightColor_31.w = vec4(tmpvar_53).w;
  vec4 tmpvar_54;
  tmpvar_54 = (lightColor_31 * _Color);
  o_33.color = tmpvar_54;
  float tmpvar_55;
  tmpvar_55 = 1.00000;
  o_33.color.w = vec4(tmpvar_55).w;
  return o_33;
}

void main ()
{
  appdata_tree xlt_v_56;
  v2f xl_retval_57;
  vec4 tmpvar_58;
  tmpvar_58 = gl_Vertex.xyzw;
  vec4 tmpvar_59;
  tmpvar_59 = tmpvar_58;
  xlt_v_56.vertex = tmpvar_59;
  vec4 tmpvar_60;
  tmpvar_60 = TANGENT.xyzw;
  vec4 tmpvar_61;
  tmpvar_61 = tmpvar_60;
  xlt_v_56.tangent = tmpvar_61;
  vec3 tmpvar_62;
  tmpvar_62 = gl_Normal.xyz;
  vec3 tmpvar_63;
  tmpvar_63 = tmpvar_62;
  xlt_v_56.normal = tmpvar_63;
  vec4 tmpvar_64;
  tmpvar_64 = gl_Color.xyzw;
  vec4 tmpvar_65;
  tmpvar_65 = tmpvar_64;
  xlt_v_56.color = tmpvar_65;
  vec4 tmpvar_66;
  tmpvar_66 = gl_MultiTexCoord0.xyzw;
  vec4 tmpvar_67;
  tmpvar_67 = tmpvar_66;
  xlt_v_56.texcoord = tmpvar_67;
  v2f tmpvar_68;
  tmpvar_68 = vert (xlt_v_56);
  v2f tmpvar_69;
  tmpvar_69 = tmpvar_68;
  xl_retval_57 = tmpvar_69;
  vec4 tmpvar_70;
  tmpvar_70 = xl_retval_57.pos.xyzw;
  vec4 tmpvar_71;
  tmpvar_71 = tmpvar_70;
  gl_Position = tmpvar_71;
  vec4 tmpvar_72;
  tmpvar_72.yzw = vec3(0.00000, 0.00000, 0.00000);
  tmpvar_72.x = xl_retval_57.fog;
  vec4 tmpvar_73;
  tmpvar_73 = tmpvar_72;
  xlv_FOG = tmpvar_73;
  vec4 tmpvar_74;
  tmpvar_74 = xl_retval_57.uv.xyzw;
  vec4 tmpvar_75;
  tmpvar_75 = tmpvar_74;
  gl_TexCoord[0] = tmpvar_75;
  vec4 tmpvar_76;
  tmpvar_76 = xl_retval_57.color.xyzw;
  vec4 tmpvar_77;
  tmpvar_77 = tmpvar_76;
  gl_FrontColor = tmpvar_77;
}

