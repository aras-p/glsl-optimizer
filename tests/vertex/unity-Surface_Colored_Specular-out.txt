varying vec4 xlv_FOG;
uniform vec4 unity_Scale;
uniform vec4 _WorldSpaceLightPos0;
uniform vec3 _WorldSpaceCameraPos;
uniform vec4 _SpecMap_ST;
uniform mat4 _Object2World;
uniform vec4 _MainTex_ST;
uniform mat4 _LightMatrix0;
void main ()
{
  vec4 tmpvar_1;
  vec4 tmpvar_2;
  tmpvar_2 = (gl_ModelViewProjectionMatrix * gl_Vertex);
  tmpvar_1.xy = ((gl_MultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((gl_MultiTexCoord0.xy * _SpecMap_ST.xy) + _SpecMap_ST.zw);
  mat3 tmpvar_3;
  tmpvar_3[0] = _Object2World[0].xyz;
  tmpvar_3[1] = _Object2World[1].xyz;
  tmpvar_3[2] = _Object2World[2].xyz;
  gl_Position = tmpvar_2;
  vec4 tmpvar_4;
  tmpvar_4.yzw = vec3(0.00000, 0.00000, 0.00000);
  tmpvar_4.x = tmpvar_2.z;
  xlv_FOG = tmpvar_4;
  gl_TexCoord[0] = tmpvar_1;
  vec4 tmpvar_5;
  tmpvar_5.w = 0.00000;
  tmpvar_5.xyz = (tmpvar_3 * (gl_Normal * unity_Scale.w));
  gl_TexCoord[1] = tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6.w = 0.00000;
  tmpvar_6.xyz = (_WorldSpaceLightPos0.xyz - (_Object2World * gl_Vertex).xyz);
  gl_TexCoord[2] = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7.w = 0.00000;
  tmpvar_7.xyz = (_WorldSpaceCameraPos - (_Object2World * gl_Vertex).xyz);
  gl_TexCoord[3] = tmpvar_7;
  gl_TexCoord[4] = (_LightMatrix0 * (_Object2World * gl_Vertex));
}

