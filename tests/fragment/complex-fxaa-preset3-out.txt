#extension GL_ARB_shader_texture_lod : enable
varying vec2 xlv_TEXCOORD0;
uniform vec4 _MainTex_TexelSize;
uniform sampler2D _MainTex;
void main ()
{
  vec3 tmpvar_1;
  int i_2;
  bool doneP_3;
  bool doneN_4;
  float lumaEndP_5;
  float lumaEndN_6;
  vec2 offNP_7;
  vec2 posP_8;
  vec2 posN_9;
  float gradientN_10;
  float lengthSign_11;
  float lumaS_12;
  float lumaN_13;
  doneN_4 = bool(0);
  doneP_3 = bool(0);
  i_2 = 0;
  vec4 tmpvar_14;
  tmpvar_14.zw = vec2(0.00000, 0.00000);
  tmpvar_14.xy = (xlv_TEXCOORD0 + (vec2(0.00000, -1.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_15;
  tmpvar_15 = texture2DLod (_MainTex, tmpvar_14.xy, 0.00000);
  vec4 tmpvar_16;
  tmpvar_16.zw = vec2(0.00000, 0.00000);
  tmpvar_16.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, 0.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_17;
  tmpvar_17 = texture2DLod (_MainTex, tmpvar_16.xy, 0.00000);
  vec4 tmpvar_18;
  tmpvar_18.zw = vec2(0.00000, 0.00000);
  tmpvar_18.xy = xlv_TEXCOORD0;
  vec4 tmpvar_19;
  tmpvar_19 = texture2DLod (_MainTex, tmpvar_18.xy, 0.00000);
  vec4 tmpvar_20;
  tmpvar_20.zw = vec2(0.00000, 0.00000);
  tmpvar_20.xy = (xlv_TEXCOORD0 + (vec2(1.00000, 0.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_21;
  tmpvar_21 = texture2DLod (_MainTex, tmpvar_20.xy, 0.00000);
  vec4 tmpvar_22;
  tmpvar_22.zw = vec2(0.00000, 0.00000);
  tmpvar_22.xy = (xlv_TEXCOORD0 + (vec2(0.00000, 1.00000) * _MainTex_TexelSize.xy));
  vec4 tmpvar_23;
  tmpvar_23 = texture2DLod (_MainTex, tmpvar_22.xy, 0.00000);
  float tmpvar_24;
  tmpvar_24 = ((tmpvar_15.y * 1.96321) + tmpvar_15.x);
  lumaN_13 = tmpvar_24;
  float tmpvar_25;
  tmpvar_25 = ((tmpvar_17.y * 1.96321) + tmpvar_17.x);
  float tmpvar_26;
  tmpvar_26 = ((tmpvar_19.y * 1.96321) + tmpvar_19.x);
  float tmpvar_27;
  tmpvar_27 = ((tmpvar_21.y * 1.96321) + tmpvar_21.x);
  float tmpvar_28;
  tmpvar_28 = ((tmpvar_23.y * 1.96321) + tmpvar_23.x);
  lumaS_12 = tmpvar_28;
  float tmpvar_29;
  tmpvar_29 = max (tmpvar_26, max (max (tmpvar_24, tmpvar_25), max (tmpvar_28, tmpvar_27)));
  float tmpvar_30;
  tmpvar_30 = (tmpvar_29 - min (tmpvar_26, min (min (tmpvar_24, tmpvar_25), min (tmpvar_28, tmpvar_27))));
  float tmpvar_31;
  tmpvar_31 = max (0.0416667, (tmpvar_29 * 0.125000));
  if ((tmpvar_30 < tmpvar_31)) {
    tmpvar_1 = tmpvar_19.xyz;
  } else {
    float tmpvar_32;
    tmpvar_32 = min (0.750000, (max (0.00000, ((abs ((((((tmpvar_24 + tmpvar_25) + tmpvar_27) + tmpvar_28) * 0.250000) - tmpvar_26)) / tmpvar_30) - 0.250000)) * 1.33333));
    vec4 tmpvar_33;
    tmpvar_33.zw = vec2(0.00000, 0.00000);
    tmpvar_33.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, -1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_34;
    tmpvar_34 = texture2DLod (_MainTex, tmpvar_33.xy, 0.00000);
    vec4 tmpvar_35;
    tmpvar_35.zw = vec2(0.00000, 0.00000);
    tmpvar_35.xy = (xlv_TEXCOORD0 + (vec2(1.00000, -1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_36;
    tmpvar_36 = texture2DLod (_MainTex, tmpvar_35.xy, 0.00000);
    vec4 tmpvar_37;
    tmpvar_37.zw = vec2(0.00000, 0.00000);
    tmpvar_37.xy = (xlv_TEXCOORD0 + (vec2(-1.00000, 1.00000) * _MainTex_TexelSize.xy));
    vec4 tmpvar_38;
    tmpvar_38 = texture2DLod (_MainTex, tmpvar_37.xy, 0.00000);
    vec4 tmpvar_39;
    tmpvar_39.zw = vec2(0.00000, 0.00000);
    tmpvar_39.xy = (xlv_TEXCOORD0 + _MainTex_TexelSize.xy);
    vec4 tmpvar_40;
    tmpvar_40 = texture2DLod (_MainTex, tmpvar_39.xy, 0.00000);
    vec3 tmpvar_41;
    tmpvar_41 = ((((((tmpvar_15.xyz + tmpvar_17.xyz) + tmpvar_19.xyz) + tmpvar_21.xyz) + tmpvar_23.xyz) + (((tmpvar_34.xyz + tmpvar_36.xyz) + tmpvar_38.xyz) + tmpvar_40.xyz)) * vec3(0.111111, 0.111111, 0.111111));
    float tmpvar_42;
    tmpvar_42 = ((tmpvar_34.y * 1.96321) + tmpvar_34.x);
    float tmpvar_43;
    tmpvar_43 = ((tmpvar_36.y * 1.96321) + tmpvar_36.x);
    float tmpvar_44;
    tmpvar_44 = ((tmpvar_38.y * 1.96321) + tmpvar_38.x);
    float tmpvar_45;
    tmpvar_45 = ((tmpvar_40.y * 1.96321) + tmpvar_40.x);
    bool tmpvar_46;
    tmpvar_46 = (((abs ((((0.250000 * tmpvar_42) + (-(0.500000) * tmpvar_25)) + (0.250000 * tmpvar_44))) + abs ((((0.500000 * tmpvar_24) + (-(1.00000) * tmpvar_26)) + (0.500000 * tmpvar_28)))) + abs ((((0.250000 * tmpvar_43) + (-(0.500000) * tmpvar_27)) + (0.250000 * tmpvar_45)))) >= ((abs ((((0.250000 * tmpvar_42) + (-(0.500000) * tmpvar_24)) + (0.250000 * tmpvar_43))) + abs ((((0.500000 * tmpvar_25) + (-(1.00000) * tmpvar_26)) + (0.500000 * tmpvar_27)))) + abs ((((0.250000 * tmpvar_44) + (-(0.500000) * tmpvar_28)) + (0.250000 * tmpvar_45)))));
    float tmpvar_47;
    if (tmpvar_46) {
      tmpvar_47 = -(_MainTex_TexelSize.y);
    } else {
      tmpvar_47 = -(_MainTex_TexelSize.x);
    };
    lengthSign_11 = tmpvar_47;
    if (!(tmpvar_46)) {
      lumaN_13 = tmpvar_25;
    };
    if (!(tmpvar_46)) {
      lumaS_12 = tmpvar_27;
    };
    float tmpvar_48;
    tmpvar_48 = abs ((lumaN_13 - tmpvar_26));
    gradientN_10 = tmpvar_48;
    float tmpvar_49;
    tmpvar_49 = abs ((lumaS_12 - tmpvar_26));
    lumaN_13 = ((lumaN_13 + tmpvar_26) * 0.500000);
    float tmpvar_50;
    tmpvar_50 = ((lumaS_12 + tmpvar_26) * 0.500000);
    lumaS_12 = tmpvar_50;
    bool tmpvar_51;
    tmpvar_51 = (tmpvar_48 >= tmpvar_49);
    if (!(tmpvar_51)) {
      lumaN_13 = tmpvar_50;
    };
    if (!(tmpvar_51)) {
      gradientN_10 = tmpvar_49;
    };
    if (!(tmpvar_51)) {
      lengthSign_11 = (tmpvar_47 * -1.00000);
    };
    float tmpvar_52;
    if (tmpvar_46) {
      tmpvar_52 = 0.00000;
    } else {
      tmpvar_52 = (lengthSign_11 * 0.500000);
    };
    posN_9.x = (xlv_TEXCOORD0.x + tmpvar_52);
    float tmpvar_53;
    if (tmpvar_46) {
      tmpvar_53 = (lengthSign_11 * 0.500000);
    } else {
      tmpvar_53 = 0.00000;
    };
    posN_9.y = (xlv_TEXCOORD0.y + tmpvar_53);
    gradientN_10 = (gradientN_10 * 0.250000);
    posP_8 = posN_9;
    vec2 tmpvar_54;
    if (tmpvar_46) {
      vec2 tmpvar_55;
      tmpvar_55.y = 0.00000;
      tmpvar_55.x = _MainTex_TexelSize.x;
      tmpvar_54 = tmpvar_55;
    } else {
      vec2 tmpvar_56;
      tmpvar_56.x = 0.00000;
      tmpvar_56.y = _MainTex_TexelSize.y;
      tmpvar_54 = tmpvar_56;
    };
    offNP_7 = tmpvar_54;
    lumaEndN_6 = lumaN_13;
    lumaEndP_5 = lumaN_13;
    posN_9 = (posN_9 + (tmpvar_54 * vec2(-1.00000, -1.00000)));
    posP_8 = (posP_8 + tmpvar_54);
    while (true) {
      if ((i_2 >= 16)) {
        break;
      };
      if (!(doneN_4)) {
        vec4 tmpvar_57;
        tmpvar_57.zw = vec2(0.00000, 0.00000);
        tmpvar_57.xy = posN_9;
        vec4 tmpvar_58;
        tmpvar_58 = texture2DLod (_MainTex, tmpvar_57.xy, 0.00000);
        lumaEndN_6 = ((tmpvar_58.y * 1.96321) + tmpvar_58.x);
      };
      if (!(doneP_3)) {
        vec4 tmpvar_59;
        tmpvar_59.zw = vec2(0.00000, 0.00000);
        tmpvar_59.xy = posP_8;
        vec4 tmpvar_60;
        tmpvar_60 = texture2DLod (_MainTex, tmpvar_59.xy, 0.00000);
        lumaEndP_5 = ((tmpvar_60.y * 1.96321) + tmpvar_60.x);
      };
      bool tmpvar_61;
      if (doneN_4) {
        tmpvar_61 = bool(1);
      } else {
        tmpvar_61 = (abs ((lumaEndN_6 - lumaN_13)) >= gradientN_10);
      };
      doneN_4 = tmpvar_61;
      bool tmpvar_62;
      if (doneP_3) {
        tmpvar_62 = bool(1);
      } else {
        tmpvar_62 = (abs ((lumaEndP_5 - lumaN_13)) >= gradientN_10);
      };
      doneP_3 = tmpvar_62;
      bool tmpvar_63;
      if (tmpvar_61) {
        tmpvar_63 = tmpvar_62;
      } else {
        tmpvar_63 = bool(0);
      };
      if (tmpvar_63) {
        break;
      };
      if (!(tmpvar_61)) {
        posN_9 = (posN_9 - offNP_7);
      };
      if (!(tmpvar_62)) {
        posP_8 = (posP_8 + offNP_7);
      };
      i_2 = (i_2 + 1);
    };
    float tmpvar_64;
    if (tmpvar_46) {
      tmpvar_64 = (xlv_TEXCOORD0.x - posN_9.x);
    } else {
      tmpvar_64 = (xlv_TEXCOORD0.y - posN_9.y);
    };
    float tmpvar_65;
    if (tmpvar_46) {
      tmpvar_65 = (posP_8.x - xlv_TEXCOORD0.x);
    } else {
      tmpvar_65 = (posP_8.y - xlv_TEXCOORD0.y);
    };
    bool tmpvar_66;
    tmpvar_66 = (tmpvar_64 < tmpvar_65);
    float tmpvar_67;
    if (tmpvar_66) {
      tmpvar_67 = lumaEndN_6;
    } else {
      tmpvar_67 = lumaEndP_5;
    };
    lumaEndN_6 = tmpvar_67;
    if ((((tmpvar_26 - lumaN_13) < 0.00000) == ((tmpvar_67 - lumaN_13) < 0.00000))) {
      lengthSign_11 = 0.00000;
    };
    float tmpvar_68;
    tmpvar_68 = (tmpvar_65 + tmpvar_64);
    float tmpvar_69;
    if (tmpvar_66) {
      tmpvar_69 = tmpvar_64;
    } else {
      tmpvar_69 = tmpvar_65;
    };
    float tmpvar_70;
    tmpvar_70 = ((0.500000 + (tmpvar_69 * (-1.00000 / tmpvar_68))) * lengthSign_11);
    float tmpvar_71;
    if (tmpvar_46) {
      tmpvar_71 = 0.00000;
    } else {
      tmpvar_71 = tmpvar_70;
    };
    float tmpvar_72;
    if (tmpvar_46) {
      tmpvar_72 = tmpvar_70;
    } else {
      tmpvar_72 = 0.00000;
    };
    vec2 tmpvar_73;
    tmpvar_73.x = (xlv_TEXCOORD0.x + tmpvar_71);
    tmpvar_73.y = (xlv_TEXCOORD0.y + tmpvar_72);
    vec4 tmpvar_74;
    tmpvar_74.zw = vec2(0.00000, 0.00000);
    tmpvar_74.xy = tmpvar_73;
    vec4 tmpvar_75;
    tmpvar_75 = texture2DLod (_MainTex, tmpvar_74.xy, 0.00000);
    vec3 tmpvar_76;
    tmpvar_76.x = -(tmpvar_32);
    tmpvar_76.y = -(tmpvar_32);
    tmpvar_76.z = -(tmpvar_32);
    tmpvar_1 = ((tmpvar_76 * tmpvar_75.xyz) + ((tmpvar_41 * vec3(tmpvar_32)) + tmpvar_75.xyz));
  };
  vec4 tmpvar_77;
  tmpvar_77.w = 0.00000;
  tmpvar_77.xyz = tmpvar_1;
  gl_FragData[0] = tmpvar_77;
}

