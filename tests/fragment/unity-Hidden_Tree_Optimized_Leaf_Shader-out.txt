uniform sampler2D _TranslucencyMap;
uniform sampler2D _MainTex;
uniform vec4 _LightColor0;
uniform float _Cutoff;
uniform sampler2D _BumpSpecMap;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = gl_TexCoord[1].xyz;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[2].xyz;
  vec4 c_3;
  vec2 tmpvar_4;
  tmpvar_4 = gl_TexCoord[0].xy;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, tmpvar_4);
  vec3 tmpvar_6;
  tmpvar_6 = (tmpvar_5.xyz * gl_Color.xyz);
  vec4 tmpvar_7;
  tmpvar_7 = texture2D (_TranslucencyMap, tmpvar_4);
  float tmpvar_8;
  tmpvar_8 = (tmpvar_5.w * gl_Color.w);
  vec4 tmpvar_9;
  tmpvar_9 = texture2D (_BumpSpecMap, tmpvar_4);
  vec4 normal_10;
  normal_10.xy = ((tmpvar_9.wy * 2.00000) - 1.00000);
  normal_10.z = sqrt (((1.00000 - (normal_10.x * normal_10.x)) - (normal_10.y * normal_10.y)));
  vec3 tmpvar_11;
  tmpvar_11 = normal_10.xyz;
  float x_12;
  x_12 = (tmpvar_8 - _Cutoff);
  if ((x_12 < 0.00000)) {
    discard;
  };
  vec4 c_13;
  float tmpvar_14;
  tmpvar_14 = dot (tmpvar_11, tmpvar_1);
  float tmpvar_15;
  tmpvar_15 = max (0.00000, -(tmpvar_14));
  c_13.xyz = ((((tmpvar_6 * (max (0.00000, ((tmpvar_14 * 0.500000) + 0.500000)) + ((tmpvar_7.xyz * tmpvar_15) * 2.00000))) + ((pow (max (0.00000, dot (tmpvar_11, normalize ((tmpvar_1 + normalize (tmpvar_2))))), (tmpvar_9.x * 128.000)) * tmpvar_7.w) * (1.00000 - clamp (ceil (tmpvar_15), 0.00000, 1.00000)))) * _LightColor0.xyz) * 2.00000);
  c_3 = c_13;
  c_3.w = tmpvar_8;
  gl_FragData[0] = c_3;
}

