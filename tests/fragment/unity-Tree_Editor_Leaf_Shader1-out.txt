uniform sampler2D _ShadowMapTexture;
uniform vec4 _ProjectionParams;
uniform sampler2D _MainTex;
uniform vec4 _LightSplitsNear;
uniform vec4 _LightSplitsFar;
uniform vec4 _LightShadowData;
uniform float _Cutoff;
uniform sampler2D _BumpMap;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0].xyz;
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[1].xyz;
  vec3 tmpvar_3;
  tmpvar_3 = gl_TexCoord[2].xyz;
  vec3 tmpvar_4;
  tmpvar_4 = gl_TexCoord[3].xyz;
  vec2 tmpvar_5;
  tmpvar_5 = gl_TexCoord[4].xy;
  vec4 res_6;
  vec2 tmpvar_7;
  tmpvar_7 = gl_TexCoord[5].xy;
  vec4 normal_8;
  normal_8.xy = ((texture2D (_BumpMap, tmpvar_7).wy * 2.00000) - 1.00000);
  normal_8.z = sqrt (((1.00000 - (normal_8.x * normal_8.x)) - (normal_8.y * normal_8.y)));
  float x_9;
  x_9 = ((texture2D (_MainTex, tmpvar_7).w * gl_Color.w) - _Cutoff);
  if ((x_9 < 0.00000)) {
    discard;
  };
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_5.xxxx;
  vec4 tmpvar_11;
  tmpvar_11 = (vec4(greaterThanEqual (tmpvar_10, _LightSplitsNear)) * vec4(lessThan (tmpvar_10, _LightSplitsFar)));
  vec4 tmpvar_12;
  tmpvar_12.w = 1.00000;
  tmpvar_12.xyz = ((((tmpvar_1 * tmpvar_11.x) + (tmpvar_2 * tmpvar_11.y)) + (tmpvar_3 * tmpvar_11.z)) + (tmpvar_4 * tmpvar_11.w));
  vec4 tmpvar_13;
  tmpvar_13 = texture2D (_ShadowMapTexture, tmpvar_12.xy);
  float tmpvar_14;
  if ((tmpvar_13.x < tmpvar_12.z)) {
    tmpvar_14 = _LightShadowData.x;
  } else {
    tmpvar_14 = 1.00000;
  };
  res_6.x = clamp ((tmpvar_14 + clamp (tmpvar_5.y, 0.00000, 1.00000)), 0.00000, 1.00000);
  res_6.y = 1.00000;
  vec2 enc_15;
  vec2 tmpvar_16;
  tmpvar_16 = fract ((vec2(1.00000, 255.000) * (1.00000 - (tmpvar_5.xxxx * _ProjectionParams.w)).x));
  enc_15 = tmpvar_16;
  enc_15.x = (tmpvar_16.x - (tmpvar_16.y * 0.00392157));
  res_6.zw = enc_15;
  gl_FragData[0] = res_6;
}

