uniform sampler2D _ShadowMapTexture;
uniform vec4 _ProjectionParams;
uniform vec4 _LightSplitsNear;
uniform vec4 _LightSplitsFar;
uniform vec4 _LightShadowData;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = gl_TexCoord[4].xy;
  vec4 res_2;
  vec4 tmpvar_3;
  tmpvar_3 = tmpvar_1.xxxx;
  vec4 tmpvar_4;
  tmpvar_4 = (vec4(greaterThanEqual (tmpvar_3, _LightSplitsNear)) * vec4(lessThan (tmpvar_3, _LightSplitsFar)));
  vec4 tmpvar_5;
  tmpvar_5.w = 1.00000;
  tmpvar_5.xyz = ((((gl_TexCoord[0].xyz * tmpvar_4.x) + (gl_TexCoord[1].xyz * tmpvar_4.y)) + (gl_TexCoord[2].xyz * tmpvar_4.z)) + (gl_TexCoord[3].xyz * tmpvar_4.w));
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_ShadowMapTexture, tmpvar_5.xy);
  float tmpvar_7;
  if ((tmpvar_6.x < tmpvar_5.z)) {
    tmpvar_7 = _LightShadowData.x;
  } else {
    tmpvar_7 = 1.00000;
  };
  res_2.x = clamp ((tmpvar_7 + clamp (tmpvar_1.y, 0.00000, 1.00000)), 0.00000, 1.00000);
  res_2.y = 1.00000;
  vec2 enc_8;
  vec2 tmpvar_9;
  tmpvar_9 = fract ((vec2(1.00000, 255.000) * (1.00000 - (tmpvar_1.xxxx * _ProjectionParams.w)).x));
  enc_8 = tmpvar_9;
  enc_8.x = (tmpvar_9.x - (tmpvar_9.y * 0.00392157));
  res_2.zw = enc_8;
  gl_FragData[0] = res_2;
}

